<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<body>
<table> 
<th><td>	Название ф-и	</td><td>	Описание	</td><td>	Данные из	</td></th>	   
<tr><td>	Получить информацию о фильме	</td><td>	- возвращает данные о фильме: жанр, название, название/год, режисер/актеры, ссылки на фото и трейлеры, рейтинг, стоимость, описание. Аргументы: movie_id.	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Получить список тэгов	</td><td>	- возвращает список тегов для данного фильма. Аргументы: movie_id.s	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать комментарии	</td><td>	- возвращает список авторов и комментариев (в виде хэша). Aргументы: movie_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать статус	</td><td>	- возвращает код статуса (в очереди (0), скачивается(1), завершен(2), ошибка(3)), процент скачивания (99% = 0.99), и время до завершения (в минутах). Аргументы: movie_id.	</td><td>	Torrent Server	<td></tr>	   
<tr><td>	Показать плейлисты пользователя	</td><td>	- показывает список плейлистов пользователя. Возвращает ссылку на хэш: playlistid => "Название плейлиста". Аргументы: user_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать баланс пользователя	</td><td>	- показывает баланс пользователя в рублях округленный до 2-х знаков после запятой. Аргументы: user_id.	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Показать список друзей пользователя	</td><td>	- возвращает ссылку на массив с именами друзей. Аргументы: user_id.	</td><td>	VK	<td></tr>	   
<tr><td>	Показать рекомендации	</td><td>	- возвращает ссылку на массив c id фильмов. Аргументы: user_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Изменить рейтинг	</td><td>	- возвращает измененный рейтинг. Аргументы: movie_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Пометить как понравилось	</td><td>	- возвращает 1- успех, 0 - ошибка. Аргументы: movie_id, user_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Добавить отзыв (рекомендацию)	</td><td>	- возвращает 1- успех, 0 - ошибка. Аргументы: movie_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Добавить фильм в плейлист	</td><td>	- возвращает 1- успех, 0 - ошибка. Аргументы: movie_id, playlist_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Добавить тэг	</td><td>	- возвращает 1- успех, 0 - ошибка. Аргументы: movie_id.	</td><td>	MySQL	<td></tr>	   
<tr><td>	Оплатить	</td><td>	- возвращает 1- успех, 0 - ошибка. Аргументы: movie_id, user_id.	</td><td>	ЛБ	<td></tr>	   
<tr><td>	я смотрел (History)	</td><td>	Показать что смотрел пользователь. аргументы: user_id, page_num (default =1) где page_num - номер страницы для листинга возвращает ссылку на хэш (пример): обложка => url, Название => Терминатор, В плейлистах_моих_друзей => %hashref	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Получить совпадения с плейлистами друзей по фильму.	</td><td>	Функция используется для вызова внутри show_user_watched аргументы: user_id, movie_id	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать все тэги польователя	</td><td>	аргументы: user_id, возвращает ссылку на массив	</td><td>	MySQL	<td></tr>	   
<tr><td>	Заказать фильм	</td><td>	аргументы: user_id, movie_id возвращает 0 - ошибка, 1 - успех в процессе заказа - проверяем баланс пользователя и стоимость фильма стоимость фильма в БД(?), баланс через ЛБ	</td><td>	ЛБ	<td></tr>	   
<tr><td>	редактировать тэги	</td><td>	аргументы movie_id, user_id, tags (ссылка на массив). возвращает 0 - ошибка, 1 - успех	</td><td>	MySQL	<td></tr>	   
<tr><td>	показывает файлы на приставке пользователя	</td><td>	аргументы: user_id, возвращает ссылку на хэш	</td><td>	MySQL	<td></tr>	   
<tr><td>	показывает информацию о файле детально	</td><td>	аргументы: file_id, возвращает сылку на хэш	</td><td>	MySQL	<td></tr>	   
<tr><td>	добавить отзыв к файлу.	</td><td>	Возможно пересечение с STB::add_movie_comment все зависит от структуры БД возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	открыть доступ друзьям	</td><td>	аргументы user_id, film_id возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	показыает список групп.	</td><td>	аргументы - user_id - для идентификации групп в которых уже участвует пользователь возвращает ссылку на хэш	</td><td>	MySQL	<td></tr>	   
<tr><td>	присоединиться к группе/отсоединиться от группы	</td><td>	аргументы: user_id, group_id, flag (0 - отсоединиться, 1 - присоединиться) возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	поиск группы	</td><td>	аргументы: keywords (поисковая фраза) возвращает ссылку на хэш	</td><td>	MySQL	<td></tr>	   
<tr><td>	показывает информацию о группе детально	</td><td>	аргумент: group_id возвращает ссылку на хэш	</td><td>	MySQL	<td></tr>	   
<tr><td>	показать лучшие фильмы о мнению группы	</td><td>	аргумент: group_id возвращает ссылку на хэш	</td><td>	MySQL	<td></tr>	   
<tr><td>	предожить лучший фильм	</td><td>	аргументы: user_id,group_id, movie_id возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	показать трэд группы (комментарии в группе)	</td><td>	вопрос о многостраничности или архиве(?) аргументы group_id, page_id (для многостраничности) возвращает ссылку на хэш (хэш хэшей или smth)	</td><td>	MySQL	<td></tr>	   
<tr><td>	голосовать за ролик (за и против в одной функции)	</td><td>	аргументы: user_id, movie_id, group_id, vote ([1] - за, [-1] - против) возвращает рейтинг с учетом голоса если удачно или 0 - если неудачна операция	</td><td>	MySQL	<td></tr>	   
<tr><td>	ответить в трэд группы	</td><td>	аргументы: user_id, group_id, текст_сообщения возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	добавить свой контент	</td><td>	насчет аргументов.. пока такие: user_id, group_id, film_id возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	показывает членов группы.	</td><td>	можно использовать для показа членов "онлайн", "офлайн", "всех" аргументы: group_id, status (0 - оффлайн,1 - онлайн,2 - все) возвращает ссылку на хэш (user_id => имя)	</td><td>	MySQL	<td></tr>	   
<tr><td>	показывает общую инфорамцию о пользователе	</td><td>	аргументы: user_id возвращает ссылку на хэш	</td><td>	ЛБ	<td></tr>	   
<tr><td>	показать личные сообщения	</td><td>	аргументы: user_id возвращает ссылку на хэш	</td><td>	VK	<td></tr>	   
<tr><td>	показать группы пользователя/все группы,	</td><td>	в том числе в которых он состоит и созданные им лично. А также вывести флаг о новых сообщениях в группах аргументы: user_id, flag (если 0 - все группы, если 1 - группы пользователя) возвращает хэш, который будет иметь флаги для идентификации группы: group_flag: 1 - состоит в группе, 0 - моя группа, message_flag: 0 - нет новостей, 1 - есть новости	</td><td>	MySQL	<td></tr>	   
<tr><td>	новый плейлист	</td><td>	аргументы: user_id, playlist_name (название плейлиста) возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	добавить кино в плейлист	</td><td>	аргументы: playlist_id, movie_id (при условии что плейлисты уникальны для БД) возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	удалить фильм из плейлиста	</td><td>	аргументы: playlist_id, movie_id (при условии что плейлисты уникальны для БД) возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	настройка видимости	</td><td>	аргументы: user_id,%hash, где хэш имеет примерно ткую структуру: $hash{показывать историю моих просмотров} => 1|0 $hash{показывать историю просмотров категории XXX} => 1|0 $hash{показывать информацию обо мне} => 1|0 возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	выводит список друзей/всех	</td><td>	аргументы: user_id, flag (0 - друзья, 1 - все) возвращает ссылку на хэш, в хэше присутствует атрибут идентифицирующий общих друзей	</td><td>	VK	<td></tr>	   
<tr><td>	показыает краткую информацию о друге	</td><td>	аргументы: user_id, friend_id user_id необходим для проверки прав на просмотр информации о пользователе возвращает ссылку на хэш	</td><td>	VK	<td></tr>	   
<tr><td>	показывает детальную информаицю о друге	</td><td>	аргументы: user_id, friend_id user_id необходим для проверки прав на просмотр информации о пользователе возвращает ссылку на хэш	</td><td>	VK	<td></tr>	   
<tr><td>	по кнопке Стать другом	</td><td>	аргументы: user_id, friend_id возвращает 1- успех, 0 - ошибка	</td><td>	VK  нет	<td></tr>	   
<tr><td>	искать в vidimax	</td><td>	аргументы: фраза для поиска возвращает набор данных, возможно в виде ссылки на хэш	</td><td>	???	<td></tr>	   
<tr><td>	Facebook. добавлять друзей из других систем.	</td><td>	аргументы: ident (login, email ? в зависимости от системы) возвращает 1- успех, 0 - ошибка	</td><td>	???	<td></tr>	   
<tr><td>	Gmail	</td><td>	Описание	</td><td>	???	<td></tr>	   
<tr><td>	Twitter	</td><td>	Описание	</td><td>	???	<td></tr>	   
<tr><td>	vKontakte	</td><td>	Описание	</td><td>	???	<td></tr>	   
<tr><td>	изменить пароль	</td><td>	аргументы: user_id, old_password, new_password возвращает 1- успех, 0 - ошибка	</td><td>	ЛБ	<td></tr>	   
<tr><td>	показать список профайлов	</td><td>	аргуенты user_id возвращает ссылку на хэш, в котором содержится вся информация о всех профайлах пользователя	</td><td>	MySQL	<td></tr>	   
<tr><td>	показывает статистику потребления по просмотрам за период	</td><td>	аргументы: user_id, start_date, end_date возвращает ссылку на хэш	</td><td>	ЛБ	<td></tr>	   
<tr><td>	добавить профайл	</td><td>	аргументы: user_id, profile_name возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	удалить профайл	</td><td>	аргументы: user_id, profile_name возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	сохранить изменения в профайле	</td><td>	аргументы: user_id, profile_name возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	показывает статистику потребления по платежам за период	</td><td>	аргументы: user_id, start_date, end_date возвращает ссылку на хэш	</td><td>	ЛБ	<td></tr>	   
<tr><td>	платеж с яндекса	</td><td>	Описание	</td><td>	ЛБ	<td></tr>	   
<tr><td>	платеж с рапиды	</td><td>	Описание	</td><td>	ЛБ	<td></tr>	   
<tr><td>	добавить приставку	</td><td>	аргументы: user_id, %hash (входные данные) возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	удалить приставку	</td><td>	аргументы: user_id, sn_topbox (?) - s/n приставки	</td><td>	MySQL	<td></tr>	   
<tr><td>	изменить параметры приставки	</td><td>	аргументы: user_id, %hash (входные данные) возвращает 1- успех, 0 - ошибка	</td><td>	MySQL	<td></tr>	   
<tr><td>	написать в тэх.поддержку	</td><td>	аргументы: user_id, %hash (входные данные) $hash{subject} => ''; =>'' возвращает 1- успех, 0 - ошибка	</td><td>	email	<td></tr>	   
<tr><td>	отобразить данные из базы знаний, разделы, статьи	</td><td>	аргументы: keywords (по умолчанию выводим все разделы) возвращаем ссылку на хэш, примерно такой: $hash{section}=>[article1, article2, ... , articlen]	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Получить ID всех фильмов	</td><td>	Возвращает: ссылку на массив списка ID медиаобъектов (фильмов) Аргументы: ID правообладателя правообладателя	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Добавить фильм	</td><td>	Возвращает: ID-медиаобъекта - успех, 0 - ошибка Аргументы: ID правообладателя и ссылка на хеш с данными медиаобъекта	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Показать информацию о фильме	</td><td>	Возвращает: ссылку на хэш данных по медиаобъекту (фильму) Аргументы: ID правообладателя и ID медиаобъекта	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Показать информацию о файле данных	</td><td>	Возвращает: ссылку на хэш со свойствами файла данных медиаобъекта (фильма) Аргументы: ID медиаобъекта и ID медиафайла	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Добавить файл данных	</td><td>	Возвращает: ID файла данных - успех, 0 - ошибка Аргументы: ID медиаобъекта и хеш с данными по файлу данных	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Изменить файл данных	</td><td>	Возвращает: ID файла данных - успех, 0 - ошибка Аргументы: ID медиаобъекта, ID файла данных и хеш с данными по файлу данных	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Удалить файл данных	</td><td>	Возвращает: 1 - успех, 0 - ошибка Аргументы: ID медиаобъекта и ID файла данных	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Показать статус файла данных	</td><td>	Возвращает: ссылку на хэш со статусом файла данных Аргументы: ID медиаобъекта и ID файла данных	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Зарузить файл данных	</td><td>	Возвращает: ID файла данных - успех, 0 - ошибка Аргументы: передаем ID правообладателя, ID медиаобъекта, ID файла данных и ссылку на хеш данных для загрузки с удаленного источника	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Показать статус удаленного источника файла данных	</td><td>	Возвращает: 1 - успех, 0 - ошибка Аргументы: ссылку на хеш данных, которые характеризуют источник загрузки	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Показать статус файла при offline-зарузке	</td><td>	Возвращает: оставшееся время загрузки и процент от загруженного файла Аргументы: передаем ID медиаобъекта, ID файла данных	</td><td>	ViDi MMP	<td></tr>	   
<tr><td>	Показать ID всех моих предожений	</td><td>	Возвращает: ссылку на массив со списком ID предложений сделанных самим пользователем Аргументы: ID правообладателя	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать предложение	</td><td>	Возвращает: ссылку на хеш параметров предложения сделанного самим пользователем Аргументы: ID правообладателя и ID предложения	</td><td>	MySQL	<td></tr>	   
<tr><td>	Добавить предложение	</td><td>	Возвращает: ID предложения если удача, 0 если ошибка. Аргументы: ID правообладателя и хеш данных по предложению	</td><td>	MySQL	<td></tr>	   
<tr><td>	Изменить мое предложение	</td><td>	Возвращает: ID предложения если удача, 0 - если ошибка Аргументы: ID правообладателя, ID предложения и хеш данных по предложению	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать ID всех сторонних предложений	</td><td>	Возвращает: ссылку на массив со списком ID предложений сделанных друими пользователями Аргументы: ID правообладателя	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать статистику правообладателя	</td><td>	Возвращает: ссылку на хэш со cтатистической информацией по действиям пользователя пользователя Аргументы: ID правообладателя, период за который необходимо получить статистику и хеш других данных для выборки	</td><td>	MySQL	<td></tr>	   
<tr><td>	Показать профиль правообладателя	</td><td>	Возвращает: ссылку на хэш с информацией по профайлу правообладателя Аргументы: ID правообладателя	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Изменить профиль правообладателя	</td><td>	Возвращает: 1 - успех, 0 - ошибка Аргументы: передаем ID правообладателя и хеш профиля правообладателя	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Показать финансовую статистику	</td><td>	Возвращает: ссылку на хэш с финансовой информацией по правообладателю Аргументы: ID правообладателя и интересующий период	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Показать аккаунты правообладателя	</td><td>	Возвращает: ссылку на массив со списом ID аккаунтов правообладателя Аргументы: ID правообладателя	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Показать аккаунт правообладателя	</td><td>	Возвращает: ссылку на хэш перечнем настроек аккаунта правообладателя Аргументы: ID правообладателя и ID аккаунта правообладателя	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Добавить аккаунт правообладателя	</td><td>	Возвращает: ID аккаунта - успех, 0 - ошибка Аргументы: ID правообладателя и хеш с данными по аккаунту правообладателя	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Изменить аккаунт правообладателя	</td><td>	Возвращает: ID аккаунта - успех, 0 - ошибка Аргументы: передаем ID правообладателя, ID аккаунта и хеш с данными по аккаунту правообладателя	</td><td>	ЛБ	<td></tr>	   
<tr><td>	Удалить аккаунт правообладателя	</td><td>	Возвращает 1- успех, 0 - ошибка. Аргументы: ID правообладателя и ID аккаунта	</td><td>	ЛБ	<td></tr>	 
</table>
</body>
</html>
